A string is good if there are no repeated characters.

Given a string s​​​​​, return the number of good substrings of length three in s​​​​​​.

Note that if there are multiple occurrences of the same substring, every occurrence should be counted.

A substring is a contiguous sequence of characters in a string.

 

Example 1:

Input: s = "xyzzaz"
Output: 1
Explanation: There are 4 substrings of size 3: "xyz", "yzz", "zza", and "zaz". 
The only good substring of length 3 is "xyz"



#MY SOLUTION
class Solution(object):
    def countGoodSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
        count = 0
        n = len(s)

        for i in range(n-2):

            window = set(s[i:i+3])
            if len(window)==3:
                count+=1
        return count

#ONE LINE SOLUTION
class Solution:
    def countGoodSubstrings(self, s: str) -> int:
       
        return sum(s[i] != s[i+1] and s[i]!= s[i+2] and s[i+1] != s[i+2] for i in range(len(s)-2))
